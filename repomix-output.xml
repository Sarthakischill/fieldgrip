This file is a merged representation of the entire codebase, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
public/
  vite.svg
src/
  assets/
    react.svg
  components/
    About.tsx
    Contact.tsx
    Footer.tsx
    Header.tsx
    LanguageSwitcher.tsx
    ProductCatalog.tsx
    ProductCategories.tsx
  locales/
    en/
      translation.json
    hi/
      translation.json
    mr/
      translation.json
  App.css
  App.tsx
  i18n.ts
  index.css
  main.tsx
  vite-env.d.ts
.gitignore
eslint.config.js
index.html
package.json
postcss.config.js
README.md
tailwind.config.js
tsconfig.app.json
tsconfig.json
tsconfig.node.json
tsconfig.node.tsbuildinfo
vite.config.ts
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="public/vite.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="31.88" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 257"><defs><linearGradient id="IconifyId1813088fe1fbc01fb466" x1="-.828%" x2="57.636%" y1="7.652%" y2="78.411%"><stop offset="0%" stop-color="#41D1FF"></stop><stop offset="100%" stop-color="#BD34FE"></stop></linearGradient><linearGradient id="IconifyId1813088fe1fbc01fb467" x1="43.376%" x2="50.316%" y1="2.242%" y2="89.03%"><stop offset="0%" stop-color="#FFEA83"></stop><stop offset="8.333%" stop-color="#FFDD35"></stop><stop offset="100%" stop-color="#FFA800"></stop></linearGradient></defs><path fill="url(#IconifyId1813088fe1fbc01fb466)" d="M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z"></path><path fill="url(#IconifyId1813088fe1fbc01fb467)" d="M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z"></path></svg>
</file>

<file path="src/assets/react.svg">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="35.93" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 228"><path fill="#00D8FF" d="M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z"></path></svg>
</file>

<file path="src/components/LanguageSwitcher.tsx">
import { useTranslation } from 'react-i18next';

export default function LanguageSwitcher() {
  const { i18n, t } = useTranslation();

  const languages = [
    { code: 'en', name: t('language.english') },
    { code: 'hi', name: t('language.hindi') },
    { code: 'mr', name: t('language.marathi') }
  ];

  const changeLanguage = (lng: string) => {
    i18n.changeLanguage(lng);
  };

  return (
    <div className="relative inline-flex items-center space-x-2 bg-slate-800 border border-slate-600 rounded-lg px-3 py-2 hover:bg-slate-700 transition-colors duration-200">
      {/* Globe Icon */}
      <svg className="w-4 h-4 text-gray-300 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M21 12a9 9 0 01-9 9m9-9a9 9 0 00-9-9m9 9H3m9 9a9 9 0 01-9-9m9 9c1.657 0 3-4.03 3-9s-1.343-9-3-9m0 18c-1.657 0-3-4.03-3-9s1.343-9 3-9m-9 9a9 9 0 019-9" />
      </svg>
      
      {/* Language Selector */}
      <select
        value={i18n.language}
        onChange={(e) => changeLanguage(e.target.value)}
        className="bg-slate-800 text-white text-sm focus:outline-none focus:ring-2 focus:ring-green-500 cursor-pointer border-0 rounded px-1 py-0"
        style={{ minWidth: '70px' }}
      >
        {languages.map((lang) => (
          <option key={lang.code} value={lang.code} className="bg-slate-800 text-white">
            {lang.name}
          </option>
        ))}
      </select>
    </div>
  );
}
</file>

<file path="src/locales/hi/translation.json">
{
  "header": {
    "brand": "फील्डग्रिप",
    "contactUs": "संपर्क करें"
  },
  "categories": {
    "nutrients": "पोषक तत्व",
    "fungicides": "फफूंदनाशी",
    "insecticides": "कीटनाशी",
    "seeds": "बीज",
    "weedicides": "खरपतवारनाशी",
    "tissueCulture": "टिश्यू कल्चर"
  },
  "products": {
    "title": "हमारे उत्पाद",
    "subtitle": "आपकी फसल की क्षमता को अधिकतम करने के लिए डिज़ाइन किए गए विशेष कृषि उत्पादों की पूरी श्रृंखला",
    "keyBenefits": "मुख्य लाभ:",
    "learnMore": "और जानें",
    "getQuote": "कोटेशन पाएं",
    "productImage": "उत्पाद छवि",
    "categories": {
      "soilRootEnhancer": "मिट्टी और जड़ संवर्धक",
      "fungalControl": "फफूंद नियंत्रण",
      "stressWeatherProtection": "तनाव/मौसम सुरक्षा",
      "micronutrientSupplement": "सूक्ष्म पोषक तत्व पूरक",
      "fruitGrowthQualityEnhancer": "फल वृद्धि और गुणवत्ता संवर्धक",
      "flowerFruitDevelopment": "फूल/फल विकास"
    },
    "items": {
      "vermigro": {
        "name": "वर्मिग्रो",
        "description": "मिट्टी में उपयोगी सूक्ष्मजीवों की संख्या बढ़ाता है, उत्पादन में सुधार करता है, और पौधों के स्वास्थ्य को बढ़ाता है",
        "benefits": ["मिट्टी के सूक्ष्मजीवों में वृद्धि", "बेहतर उत्पादन", "बेहतर पौधों का स्वास्थ्य"]
      },
      "jumbogrip": {
        "name": "जंबोग्रिप",
        "description": "फलों का आकार और वजन काफी बढ़ाता है, विभिन्न फसलों की गुणवत्ता में सुधार करता है",
        "benefits": ["बड़े फल", "बेहतर गुणवत्ता", "अधिक वजन"]
      },
      "rewardN": {
        "name": "रिवार्ड-एन",
        "description": "अदरक और हल्दी में सड़न और बीमारियों को नियंत्रित करता है; ड्रिप या ड्रेंचिंग के लिए अनुशंसित",
        "benefits": ["रोग नियंत्रण", "सड़न रोकथाम", "फसल सुरक्षा"]
      },
      "orthogrip18": {
        "name": "ऑर्थोग्रिप 18",
        "description": "तापमान, अतिरिक्त बारिश, या बीमारी से होने वाले अजैविक तनाव को कम करता है",
        "benefits": ["तनाव में कमी", "मौसम सुरक्षा", "रोग प्रतिरोध"]
      },
      "technovit": {
        "name": "टेक्नोविट",
        "description": "पौधों को पर्यावरणीय बदलावों का सामना करने में मदद करता है और तनाव से राहत देता है। शाखाओं की संख्या बढ़ाता है और पौधों के स्वास्थ्य में सुधार करता है",
        "benefits": ["तनाव से राहत", "अधिक शाखाएं", "पर्यावरणीय प्रतिरोध"]
      },
      "microgrip": {
        "name": "माइक्रोग्रिप",
        "description": "सरकारी मानक के अनुसार सभी आवश्यक सूक्ष्म पोषक तत्व शामिल हैं; उत्पादन में 30-40% की वृद्धि करता है",
        "benefits": ["आवश्यक पोषक तत्व", "30-40% उत्पादन वृद्धि", "सरकारी मानक"]
      },
      "setterDF": {
        "name": "सेटर डीएफ",
        "description": "बेहतर फल सेटिंग और विकास के लिए विशेष फॉर्मूलेशन",
        "benefits": ["बेहतर फल सेटिंग", "बेहतर विकास", "गुणवत्ता में सुधार"]
      },
      "goldHut98": {
        "name": "गोल्ड हट-98",
        "description": "सफेद जड़ों की संख्या बढ़ाता है, पौधों की गुणवत्ता और उत्पादन में सुधार करता है",
        "benefits": ["अधिक सफेद जड़ें", "बेहतर गुणवत्ता", "अधिक उत्पादन"]
      },
      "flowerStart": {
        "name": "फ्लावर स्टार्ट",
        "description": "बेहतर फूल आने और फल सेट के लिए फूल प्रेरण बूस्टर",
        "benefits": ["फूल प्रेरण", "बेहतर फूल आना", "बेहतर फल सेट"]
      }
    }
  },
  "about": {
    "title": "फील्डग्रिप प्राइवेट लिमिटेड के बारे में",
    "subtitle": "हमारी स्थापना के बाद से नवाचार कृषि समाधानों के साथ किसानों को सशक्त बनाना",
    "ourStory": "हमारी कहानी",
    "storyContent": {
      "paragraph1": "फील्डग्रिप प्राइवेट लिमिटेड की स्थापना नवाचार, टिकाऊ समाधानों के माध्यम से कृषि में क्रांति लाने के दृष्टिकोण के साथ की गई थी। हम आधुनिक किसानों की चुनौतियों को समझते हैं और ऐसे उत्पाद प्रदान करने के लिए प्रतिबद्ध हैं जो न केवल उत्पादन बढ़ाते हैं बल्कि पर्यावरण की भी रक्षा करते हैं।",
      "paragraph2": "हमारी 9 विशेष उत्पादों की व्यापक श्रृंखला फसल पोषण के हर पहलू को कवर करती है, मिट्टी की कंडीशनिंग से लेकर फसल अनुकूलन तक। प्रत्येक उत्पाद को नवीनतम कृषि विज्ञान का उपयोग करके सावधानीपूर्वक तैयार किया गया है और अधिकतम प्रभावशीलता सुनिश्चित करने के लिए व्यापक रूप से परीक्षण किया गया है।",
      "paragraph3": "हम किसानों के साथ साझेदारी बनाने में विश्वास करते हैं, केवल उत्पाद ही नहीं बल्कि पूर्ण कृषि समाधान प्रदान करते हैं जो उन्हें टिकाऊ सफलता प्राप्त करने में मदद करते हैं।"
    },
    "mission": {
      "title": "हमारा मिशन",
      "content": "भावी पीढ़ियों के लिए पर्यावरणीय स्वास्थ्य को संरक्षित करते हुए फसल उत्पादकता को अधिकतम करने वाले नवाचार, टिकाऊ कृषि समाधानों के साथ किसानों को सशक्त बनाना।"
    },
    "vision": {
      "title": "हमारा दृष्टिकोण",
      "content": "भारत में कृषि समाधानों का अग्रणी प्रदाता बनना, नवाचार, गुणवत्ता और किसान सफलता के लिए हमारी प्रतिबद्धता के लिए पहचाना जाना।"
    }
  },
  "contact": {
    "title": "संपर्क करें",
    "subtitle": "अपनी फसल की पैदावार बढ़ाने के लिए तैयार हैं? व्यक्तिगत कृषि समाधानों के लिए हमसे संपर्क करें",
    "sendMessage": "हमें संदेश भेजें",
    "contactInfo": "संपर्क जानकारी",
    "whatsapp": {
      "title": "व्हाट्सऐप पर जुड़ें",
      "subtitle": "अपने कृषि प्रश्नों के तुरंत उत्तर पाएं",
      "button": "व्हाट्सऐप पर चैट करें"
    },
    "form": {
      "fullName": "पूरा नाम",
      "email": "ईमेल पता",
      "phone": "फोन नंबर",
      "primaryCrop": "मुख्य फसल",
      "selectCrop": "अपनी फसल चुनें",
      "message": "संदेश",
      "messagePlaceholder": "हमें अपनी आवश्यकताओं के बारे में बताएं...",
      "sendButton": "संदेश भेजें",
      "required": "*",
      "placeholders": {
        "name": "अपना नाम दर्ज करें",
        "email": "अपना ईमेल दर्ज करें",
        "phone": "अपना फोन दर्ज करें"
      },
      "successMessage": "आपकी पूछताछ के लिए धन्यवाद! हम जल्द ही आपसे संपर्क करेंगे।"
    },
    "info": {
      "address": {
        "title": "पता",
        "line1": "फील्डग्रिप प्राइवेट लिमिटेड",
        "line2": "कृषि समाधान केंद्र",
        "line3": "महाराष्ट्र, भारत"
      },
      "phone": {
        "title": "फोन"
      },
      "email": {
        "title": "ईमेल"
      },
      "hours": {
        "title": "कार्य समय",
        "weekdays": "सोम - शनि: सुबह 9:00 - शाम 6:00",
        "sunday": "रविवार: बंद"
      }
    },
    "crops": ["कपास", "अंगूर", "गन्ना", "केला", "नींबू", "अनार", "पपीता", "तरबूज", "सब्जियां", "अदरक", "हल्दी", "अन्य"]
  },
  "footer": {
    "companyName": "फील्डग्रिप",
    "companyType": "प्राइवेट लिमिटेड",
    "description": "टिकाऊ विकास और अधिकतम उत्पादकता के लिए नवाचार कृषि समाधानों के साथ किसानों को सशक्त बनाना।",
    "copyright": "© 2024 फील्डग्रिप प्राइवेट लिमिटेड। सभी अधिकार सुरक्षित।",
    "privacyPolicy": "गोपनीयता नीति",
    "termsOfService": "सेवा की शर्तें"
  },
  "language": {
    "english": "English",
    "hindi": "हिंदी",
    "marathi": "मराठी"
  }
}
</file>

<file path="src/locales/mr/translation.json">
{
  "header": {
    "brand": "फील्डग्रिप",
    "contactUs": "संपर्क करा"
  },
  "categories": {
    "nutrients": "पोषक तत्वे",
    "fungicides": "बुरशीनाशक",
    "insecticides": "कीटकनाशक",
    "seeds": "बियाणे",
    "weedicides": "तणनाशक",
    "tissueCulture": "टिश्यू कल्चर"
  },
  "products": {
    "title": "आमची उत्पादने",
    "subtitle": "तुमच्या पिकाची क्षमता वाढवण्यासाठी डिझाइन केलेल्या विशेष कृषी उत्पादनांची संपूर्ण श्रेणी",
    "keyBenefits": "मुख्य फायदे:",
    "learnMore": "अधिक जाणून घ्या",
    "getQuote": "कोटेशन मिळवा",
    "productImage": "उत्पादन प्रतिमा",
    "categories": {
      "soilRootEnhancer": "माती आणि मूळ संवर्धक",
      "fungalControl": "बुरशी नियंत्रण",
      "stressWeatherProtection": "तणाव/हवामान संरक्षण",
      "micronutrientSupplement": "सूक्ष्म पोषक तत्व पूरक",
      "fruitGrowthQualityEnhancer": "फळ वाढ आणि गुणवत्ता संवर्धक",
      "flowerFruitDevelopment": "फूल/फळ विकास"
    },
    "items": {
      "vermigro": {
        "name": "वर्मिग्रो",
        "description": "मातीतील उपयुक्त सूक्ष्मजीवांची संख्या वाढवते, उत्पादन सुधारते आणि वनस्पतींचे आरोग्य वाढवते",
        "benefits": [
          "मातीतील सूक्ष्मजीवांची वाढ",
          "सुधारित उत्पादन",
          "चांगले वनस्पती आरोग्य"
        ]
      },
      "jumbogrip": {
        "name": "जंबोग्रिप",
        "description": "फळांचा आकार आणि वजन लक्षणीयरीत्या वाढवते, विविध पिकांची गुणवत्ता सुधारते",
        "benefits": ["मोठी फळे", "चांगली गुणवत्ता", "जास्त वजन"]
      },
      "rewardN": {
        "name": "रिवार्ड-एन",
        "description": "आले आणि हळदीतील कुजणे आणि रोग नियंत्रित करते; ड्रिप किंवा ड्रेंचिंगसाठी शिफारसीत",
        "benefits": ["रोग नियंत्रण", "कुजणे प्रतिबंध", "पीक संरक्षण"]
      },
      "orthogrip18": {
        "name": "ऑर्थोग्रिप 18",
        "description": "तापमान, जास्त पाऊस किंवा रोगामुळे होणारा अजैविक तणाव कमी करते",
        "benefits": ["तणाव कमी करणे", "हवामान संरक्षण", "रोग प्रतिकार"]
      },
      "technovit": {
        "name": "टेक्नोविट",
        "description": "वनस्पतींना पर्यावरणीय बदलांचा सामना करण्यास मदत करते आणि तणाव कमी करते। फांद्या वाढवते आणि वनस्पतींचे आरोग्य सुधारते",
        "benefits": ["तणाव मुक्ती", "अधिक फांद्या", "पर्यावरणीय प्रतिकार"]
      },
      "microgrip": {
        "name": "मायक्रोग्रिप",
        "description": "सरकारी मानकानुसार सर्व आवश्यक सूक्ष्म पोषक तत्वे समाविष्ट आहेत; उत्पादनात 30-40% वाढ करते",
        "benefits": ["आवश्यक पोषक तत्वे", "30-40% उत्पादन वाढ", "सरकारी मानक"]
      },
      "setterDF": {
        "name": "सेटर डीएफ",
        "description": "सुधारित फळ सेटिंग आणि विकासासाठी विशेष फॉर्म्युलेशन",
        "benefits": ["चांगली फळ सेटिंग", "सुधारित विकास", "गुणवत्ता सुधारणा"]
      },
      "goldHut98": {
        "name": "गोल्ड हट-98",
        "description": "पांढऱ्या मुळांची संख्या वाढवते, वनस्पतींची गुणवत्ता आणि उत्पादन सुधारते",
        "benefits": ["अधिक पांढरी मुळे", "चांगली गुणवत्ता", "जास्त उत्पादन"]
      },
      "flowerStart": {
        "name": "फ्लावर स्टार्ट",
        "description": "सुधारित फुलणे आणि फळ सेटसाठी फूल प्रेरणा बूस्टर",
        "benefits": ["फूल प्रेरणा", "सुधारित फुलणे", "चांगली फळ सेट"]
      }
    }
  },
  "about": {
    "title": "फील्डग्रिप प्रायव्हेट लिमिटेडबद्दल",
    "subtitle": "आमच्या स्थापनेपासून नाविन्यपूर्ण कृषी समाधानांसह शेतकऱ्यांना सक्षम बनवणे",
    "ourStory": "आमची कथा",
    "storyContent": {
      "paragraph1": "फील्डग्रिप प्रायव्हेट लिमिटेडची स्थापना नाविन्यपूर्ण, टिकाऊ समाधानांद्वारे कृषीमध्ये क्रांती घडवून आणण्याच्या दृष्टिकोनाने करण्यात आली. आम्ही आधुनिक शेतकऱ्यांच्या आव्हानांना समजतो आणि अशी उत्पादने प्रदान करण्यासाठी वचनबद्ध आहोत जी केवळ उत्पादन वाढवत नाहीत तर पर्यावरणाचे संरक्षण देखील करतात.",
      "paragraph2": "आमच्या 9 विशेष उत्पादनांची व्यापक श्रेणी पीक पोषणाच्या प्रत्येक पैलूला कव्हर करते, माती कंडिशनिंगपासून ते कापणी अनुकूलनापर्यंत. प्रत्येक उत्पादन नवीनतम कृषी विज्ञानाचा वापर करून काळजीपूर्वक तयार केले गेले आहे आणि जास्तीत जास्त प्रभावीता सुनिश्चित करण्यासाठी व्यापक चाचणी केली गेली आहे.",
      "paragraph3": "आम्ही शेतकऱ्यांसोबत भागीदारी निर्माण करण्यावर विश्वास ठेवतो, केवळ उत्पादने नव्हे तर संपूर्ण कृषी समाधाने प्रदान करतो जी त्यांना टिकाऊ यश मिळवण्यास मदत करतात."
    },
    "mission": {
      "title": "आमचे ध्येय",
      "content": "भावी पिढ्यांसाठी पर्यावरणीय आरोग्य जपत पीक उत्पादकता वाढवणाऱ्या नाविन्यपूर्ण, टिकाऊ कृषी समाधानांसह शेतकऱ्यांना सक्षम बनवणे."
    },
    "vision": {
      "title": "आमची दृष्टी",
      "content": "भारतातील कृषी समाधानांचा आघाडीचा प्रदाता बनणे, नाविन्य, गुणवत्ता आणि शेतकरी यशासाठी आमच्या वचनबद्धतेसाठी ओळखले जाणे."
    }
  },
  "contact": {
    "title": "संपर्क करा",
    "subtitle": "तुमच्या पिकाचे उत्पादन वाढवण्यास तयार आहात? वैयक्तिक कृषी समाधानांसाठी आमच्याशी संपर्क साधा",
    "sendMessage": "आम्हाला संदेश पाठवा",
    "contactInfo": "संपर्क माहिती",
    "whatsapp": {
      "title": "व्हाट्सअॅपवर जोडा",
      "subtitle": "तुमच्या कृषी प्रश्नांची तत्काळ उत्तरे मिळवा",
      "button": "व्हाट्सअॅपवर चॅट करा"
    },
    "form": {
      "fullName": "पूर्ण नाव",
      "email": "ईमेल पत्ता",
      "phone": "फोन नंबर",
      "primaryCrop": "मुख्य पीक",
      "selectCrop": "तुमचे पीक निवडा",
      "message": "संदेश",
      "messagePlaceholder": "आम्हाला तुमच्या गरजांबद्दल सांगा...",
      "sendButton": "संदेश पाठवा",
      "required": "*",
      "placeholders": {
        "name": "तुमचे नाव टाका",
        "email": "तुमचा ईमेल टाका",
        "phone": "तुमचा फोन टाका"
      },
      "successMessage": "तुमच्या चौकशीसाठी धन्यवाद! आम्ही लवकरच तुमच्याशी संपर्क साधू."
    },
    "info": {
      "address": {
        "title": "पत्ता",
        "line1": "फील्डग्रिप प्रायव्हेट लिमिटेड",
        "line2": "कृषी समाधान केंद्र",
        "line3": "महाराष्ट्र, भारत"
      },
      "phone": {
        "title": "फोन"
      },
      "email": {
        "title": "ईमेल"
      },
      "hours": {
        "title": "कामाचे तास",
        "weekdays": "सोम - शनि: सकाळी 9:00 - संध्याकाळी 6:00",
        "sunday": "रविवार: बंद"
      }
    },
    "crops": [
      "कापूस",
      "द्राक्षे",
      "ऊस",
      "केळी",
      "लिंबू",
      "डाळिंब",
      "पपई",
      "टरबूज",
      "भाज्या",
      "आले",
      "हळद",
      "इतर"
    ]
  },
  "footer": {
    "companyName": "फील्डग्रिप",
    "companyType": "प्रायव्हेट लिमिटेड",
    "description": "टिकाऊ वाढ आणि जास्तीत जास्त उत्पादकतेसाठी नाविन्यपूर्ण कृषी समाधानांसह शेतकऱ्यांना सक्षम बनवणे.",
    "copyright": "© 2024 फील्डग्रिप प्रायव्हेट लिमिटेड. सर्व हक्क राखीव.",
    "privacyPolicy": "गोपनीयता धोरण",
    "termsOfService": "सेवा अटी"
  },
  "language": {
    "english": "English",
    "hindi": "हिंदी",
    "marathi": "मराठी"
  }
}
</file>

<file path="src/App.css">
#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}
</file>

<file path="src/App.tsx">
import Header from "./components/Header";
import ProductCategories from "./components/ProductCategories";
import ProductCatalog from "./components/ProductCatalog";
import About from "./components/About";
import Contact from "./components/Contact";
import Footer from "./components/Footer";

export default function App() {
  return (
    <div className="min-h-screen bg-white">
      <Header />
      <ProductCategories />
      <ProductCatalog />
      <About />
      <Contact />
      <Footer />
    </div>
  );
}
</file>

<file path="src/i18n.ts">
import i18n from 'i18next';
import { initReactI18next } from 'react-i18next';

import enTranslation from './locales/en/translation.json';
import hiTranslation from './locales/hi/translation.json';
import mrTranslation from './locales/mr/translation.json';

i18n
  .use(initReactI18next)
  .init({
    resources: {
      en: {
        translation: enTranslation,
      },
      hi: {
        translation: hiTranslation,
      },
      mr: {
        translation: mrTranslation,
      },
    },
    lng: 'en', // default language
    fallbackLng: 'en', // fallback language if translation is missing
    interpolation: {
      escapeValue: false, // react already safes from xss
    },
  });

export default i18n;
</file>

<file path="src/index.css">
@import url('https://fonts.googleapis.com/css2?family=Bricolage+Grotesque:opsz,wght@12..96,200..800&family=Montserrat:wght@300;400;500;600;700&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: #f1f1f1;
}

::-webkit-scrollbar-thumb {
  background: #16a34a;
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: #15803d;
}

/* Smooth scrolling */
html {
  scroll-behavior: smooth;
}

/* Default font family */
body {
  font-family: 'Montserrat', sans-serif;
}

/* Hide scrollbar for categories */
.scrollbar-hide {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

.scrollbar-hide::-webkit-scrollbar {
  display: none;
}

/* Custom animations */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.animate-fadeInUp {
  animation: fadeInUp 0.6s ease-out;
}

.animate-slideInLeft {
  animation: slideInLeft 0.6s ease-out;
}

.animate-slideInRight {
  animation: slideInRight 0.6s ease-out;
}

/* Gradient text */
.gradient-text {
  background: linear-gradient(135deg, #16a34a, #059669);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* Custom button hover effects */
.btn-hover-effect {
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

.btn-hover-effect::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
  transition: left 0.5s;
}

.btn-hover-effect:hover::before {
  left: 100%;
}

/* Card hover effects */
.card-hover {
  transition: all 0.3s ease;
}

.card-hover:hover {
  transform: translateY(-8px);
  box-shadow: 0 20px 40px rgba(0,0,0,0.1);
}

/* Loading animation */
.loading-dots {
  display: inline-block;
}

.loading-dots::after {
  content: '';
  animation: dots 1.5s steps(5, end) infinite;
}

@keyframes dots {
  0%, 20% {
    color: rgba(0,0,0,0);
    text-shadow:
      .25em 0 0 rgba(0,0,0,0),
      .5em 0 0 rgba(0,0,0,0);
  }
  40% {
    color: #16a34a;
    text-shadow:
      .25em 0 0 rgba(0,0,0,0),
      .5em 0 0 rgba(0,0,0,0);
  }
  60% {
    text-shadow:
      .25em 0 0 #16a34a,
      .5em 0 0 rgba(0,0,0,0);
  }
  80%, 100% {
    text-shadow:
      .25em 0 0 #16a34a,
      .5em 0 0 #16a34a;
  }
}
</file>

<file path="src/vite-env.d.ts">
/// <reference types="vite/client" />
</file>

<file path=".gitignore">
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
</file>

<file path="eslint.config.js">
import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'
import tseslint from 'typescript-eslint'
import { globalIgnores } from 'eslint/config'

export default tseslint.config([
  globalIgnores(['dist']),
  {
    files: ['**/*.{ts,tsx}'],
    extends: [
      js.configs.recommended,
      tseslint.configs.recommended,
      reactHooks.configs['recommended-latest'],
      reactRefresh.configs.vite,
    ],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
    },
  },
])
</file>

<file path="index.html">
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vite + React + TS</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>
</file>

<file path="postcss.config.js">
export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
}
</file>

<file path="README.md">
# Fieldgrip Private Limited - Agricultural Products Website

A modern, responsive website showcasing Fieldgrip's agricultural product catalog.

## Features

- **Clean Hero Section**: Professional landing page with company branding
- **Product Catalog**: Comprehensive showcase of all 9 Fieldgrip products organized by categories
- **Scroll-based Navigation**: Smooth category switching as user scrolls through products
- **Responsive Design**: Optimized for all device sizes
- **Contact Form**: Easy inquiry system for potential customers
- **About Section**: Company information and values

## Product Categories

1. **Soil & Root Enhancer** - Vermigro, Jumbogrip
2. **Fungal Control** - Reward-N, Orthogrip 18
3. **Stress/Weather Protection** - Technovit
4. **Micronutrient Supplement** - Microgrip
5. **Fruit Growth & Quality Enhancer** - Setter DF
6. **Flower/Fruit Development** - Gold Hut-98, Flower Start

## Technology Stack

- **React 19** with TypeScript
- **Tailwind CSS** for styling
- **Vite** for build tooling
- **Responsive Design** principles

## Getting Started

```bash
# Install dependencies
npm install

# Start development server
npm run dev

# Build for production
npm run build
```

## Project Structure

```
src/
├── components/
│   ├── Header.tsx          # Navigation header
│   ├── Hero.tsx            # Landing section
│   ├── ProductCatalog.tsx  # Main product showcase
│   ├── About.tsx           # Company information
│   ├── Contact.tsx         # Contact form
│   └── Footer.tsx          # Site footer
├── App.tsx                 # Main app component
└── index.css              # Global styles
```

## Key Changes Made

- Removed unnecessary animations and decorative elements
- Updated product list to match actual 9 products from company catalog
- Removed Solutions and Gallery sections as requested
- Implemented scroll-based category navigation
- Added image placeholders for future product photos
- Simplified navigation to focus on core sections
- Updated all product counts and statistics to reflect actual catalog

## Image Placeholders

Product images are currently showing placeholders. Replace these with actual product photos by updating the `image` property in each product object within `ProductCatalog.tsx`.

## Contact Information

The contact form is ready for integration with your preferred backend service or email handling system.
</file>

<file path="tailwind.config.js">
/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}
</file>

<file path="tsconfig.app.json">
{
  "compilerOptions": {
    "tsBuildInfoFile": "./node_modules/.tmp/tsconfig.app.tsbuildinfo",
    "incremental": true,
    "target": "ES2022",
    "useDefineForClassFields": true,
    "lib": ["ES2022", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "verbatimModuleSyntax": true,
    "moduleDetection": "force",
    "noEmit": true,
    "jsx": "react-jsx",

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedSideEffectImports": true
  },
  "include": ["src"]
}
</file>

<file path="tsconfig.json">
{
  "files": [],
  "references": [
    { "path": "./tsconfig.app.json" },
    { "path": "./tsconfig.node.json" }
  ]
}
</file>

<file path="tsconfig.node.json">
{
  "compilerOptions": {
    "target": "ES2023",
    "lib": ["ES2023"],
    "module": "ESNext",
    "skipLibCheck": true,

    /* Bundler mode */
    "moduleResolution": "bundler",
    "allowImportingTsExtensions": true,
    "verbatimModuleSyntax": true,
    "moduleDetection": "force",
    "noEmit": true,

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedSideEffectImports": true
  },
  "include": ["vite.config.ts"]
}
</file>

<file path="tsconfig.node.tsbuildinfo">
{"root":["./vite.config.ts"],"version":"5.8.3"}
</file>

<file path="vite.config.ts">
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react-swc'

// https://vite.dev/config/
export default defineConfig({
  plugins: [react()],
})
</file>

<file path="src/components/About.tsx">
import { useTranslation } from 'react-i18next';

export default function About() {
  const { t } = useTranslation();
  
  return (
    <section id="about" className="py-20 bg-gradient-to-br from-green-50 to-emerald-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Section Header */}
        <div className="text-center mb-16">
          <h2 className="text-2xl sm:text-3xl lg:text-4xl xl:text-5xl font-bold text-gray-900 mb-4 sm:mb-6" style={{ fontFamily: 'Bricolage Grotesque, sans-serif' }}>
            {t('about.title')}
          </h2>
          <p className="text-xl text-gray-600 max-w-3xl mx-auto">
            {t('about.subtitle')}
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-12 items-center">
          {/* Company Story */}
          <div>
            <h3 className="text-3xl font-bold text-gray-900 mb-6" style={{ fontFamily: 'Bricolage Grotesque, sans-serif' }}>{t('about.ourStory')}</h3>
            <div className="space-y-4 text-gray-700 leading-relaxed">
              <p>
                {t('about.storyContent.paragraph1')}
              </p>
              <p>
                {t('about.storyContent.paragraph2')}
              </p>
              <p>
                {t('about.storyContent.paragraph3')}
              </p>
            </div>
          </div>

          {/* Mission & Vision */}
          <div className="space-y-8">
            <div className="bg-white rounded-lg p-6 shadow-lg">
              <h4 className="text-2xl font-bold text-green-800 mb-4" style={{ fontFamily: 'Bricolage Grotesque, sans-serif' }}>{t('about.mission.title')}</h4>
              <p className="text-gray-700">
                {t('about.mission.content')}
              </p>
            </div>
            <div className="bg-white rounded-lg p-6 shadow-lg">
              <h4 className="text-2xl font-bold text-green-800 mb-4" style={{ fontFamily: 'Bricolage Grotesque, sans-serif' }}>{t('about.vision.title')}</h4>
              <p className="text-gray-700">
                {t('about.vision.content')}
              </p>
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}
</file>

<file path="src/components/Contact.tsx">
import { useState } from 'react'
import { useTranslation } from 'react-i18next';

export default function Contact() {
  const { t } = useTranslation();
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    crop: '',
    message: ''
  })

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    // Handle form submission
    console.log('Form submitted:', formData)
    // Reset form
    setFormData({ name: '', email: '', phone: '', crop: '', message: '' })
    alert(t('contact.form.successMessage'))
  }

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    })
  }

  const contactInfo = [
    {
      icon: "📍",
      title: t('contact.info.address.title'),
      details: [t('contact.info.address.line1'), t('contact.info.address.line2'), t('contact.info.address.line3')]
    },
    {
      icon: "📞",
      title: t('contact.info.phone.title'),
      details: ["+91 98765 43210", "+91 87654 32109"]
    },
    {
      icon: "✉️",
      title: t('contact.info.email.title'),
      details: ["info@fieldgrip.com", "support@fieldgrip.com"]
    },
    {
      icon: "🕒",
      title: t('contact.info.hours.title'),
      details: [t('contact.info.hours.weekdays'), t('contact.info.hours.sunday')]
    }
  ]

  const crops = t('contact.crops', { returnObjects: true }) as string[]

  return (
    <section id="contact" className="py-12 sm:py-16 lg:py-20 bg-gradient-to-br from-green-50 to-emerald-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Section Header */}
        <div className="text-center mb-8 sm:mb-12 lg:mb-16">
          <h2 className="text-2xl sm:text-3xl lg:text-4xl xl:text-5xl font-bold text-gray-900 mb-4 sm:mb-6" style={{ fontFamily: 'Bricolage Grotesque, sans-serif' }}>
            {t('contact.title')}
          </h2>
          <p className="text-base sm:text-lg lg:text-xl text-gray-600 max-w-3xl mx-auto px-4" style={{ fontFamily: 'Montserrat, sans-serif' }}>
            {t('contact.subtitle')}
          </p>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6 lg:gap-8">
          {/* Send Us a Message */}
          <div className="bg-white rounded-2xl shadow-xl p-8">
            <h3 className="text-2xl font-bold text-gray-900 mb-6" style={{ fontFamily: 'Bricolage Grotesque, sans-serif' }}>{t('contact.sendMessage')}</h3>
            <form onSubmit={handleSubmit} className="space-y-4">
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2" style={{ fontFamily: 'Montserrat, sans-serif' }}>
                  {t('contact.form.fullName')} {t('contact.form.required')}
                </label>
                <input
                  type="text"
                  name="name"
                  value={formData.name}
                  onChange={handleChange}
                  required
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200"
                  placeholder={t('contact.form.placeholders.name')}
                  style={{ fontFamily: 'Montserrat, sans-serif' }}
                />
              </div>
              
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2" style={{ fontFamily: 'Montserrat, sans-serif' }}>
                  {t('contact.form.email')} {t('contact.form.required')}
                </label>
                <input
                  type="email"
                  name="email"
                  value={formData.email}
                  onChange={handleChange}
                  required
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200"
                  placeholder={t('contact.form.placeholders.email')}
                  style={{ fontFamily: 'Montserrat, sans-serif' }}
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2" style={{ fontFamily: 'Montserrat, sans-serif' }}>
                  {t('contact.form.phone')} {t('contact.form.required')}
                </label>
                <input
                  type="tel"
                  name="phone"
                  value={formData.phone}
                  onChange={handleChange}
                  required
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200"
                  placeholder={t('contact.form.placeholders.phone')}
                  style={{ fontFamily: 'Montserrat, sans-serif' }}
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2" style={{ fontFamily: 'Montserrat, sans-serif' }}>
                  {t('contact.form.primaryCrop')}
                </label>
                <select
                  name="crop"
                  value={formData.crop}
                  onChange={handleChange}
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200"
                  style={{ fontFamily: 'Montserrat, sans-serif' }}
                >
                  <option value="">{t('contact.form.selectCrop')}</option>
                  {crops.map((crop) => (
                    <option key={crop} value={crop}>{crop}</option>
                  ))}
                </select>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2" style={{ fontFamily: 'Montserrat, sans-serif' }}>
                  {t('contact.form.message')}
                </label>
                <textarea
                  name="message"
                  value={formData.message}
                  onChange={handleChange}
                  rows={4}
                  className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent transition-all duration-200"
                  placeholder={t('contact.form.messagePlaceholder')}
                  style={{ fontFamily: 'Montserrat, sans-serif' }}
                ></textarea>
              </div>

              <button
                type="submit"
                className="w-full bg-green-600 text-white py-3 rounded-md font-semibold hover:bg-green-700 transition-colors duration-200"
                style={{ fontFamily: 'Montserrat, sans-serif' }}
              >
                {t('contact.form.sendButton')}
              </button>
            </form>
          </div>

          {/* Contact Information */}
          <div className="bg-white rounded-2xl shadow-xl p-8">
            <h3 className="text-2xl font-bold text-gray-900 mb-6" style={{ fontFamily: 'Bricolage Grotesque, sans-serif' }}>{t('contact.contactInfo')}</h3>
            <div className="space-y-6">
              {contactInfo.map((info, index) => (
                <div key={index} className="flex items-start">
                  <div className="text-2xl mr-4 mt-1">{info.icon}</div>
                  <div>
                    <h4 className="font-semibold text-gray-900 mb-2" style={{ fontFamily: 'Montserrat, sans-serif' }}>{info.title}</h4>
                    {info.details.map((detail, idx) => (
                      <p key={idx} className="text-gray-600 text-sm" style={{ fontFamily: 'Montserrat, sans-serif' }}>{detail}</p>
                    ))}
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* Connect on WhatsApp */}
          <div className="bg-gradient-to-br from-green-600 to-emerald-600 rounded-2xl shadow-xl p-8 text-white text-center">
            <div className="text-4xl mb-4">💬</div>
            <h3 className="text-2xl font-bold mb-4" style={{ fontFamily: 'Bricolage Grotesque, sans-serif' }}>{t('contact.whatsapp.title')}</h3>
            <p className="mb-6" style={{ fontFamily: 'Montserrat, sans-serif' }}>{t('contact.whatsapp.subtitle')}</p>
            <button className="bg-white text-green-600 px-8 py-3 rounded-md font-semibold hover:bg-gray-100 transition-colors duration-200" style={{ fontFamily: 'Montserrat, sans-serif' }}>
              {t('contact.whatsapp.button')}
            </button>
          </div>
        </div>
      </div>
    </section>
  )
}
</file>

<file path="src/components/Footer.tsx">
import { useTranslation } from 'react-i18next';

export default function Footer() {
  const { t } = useTranslation();
  
  return (
    <footer className="bg-gray-900 text-white">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 sm:py-12">
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-8 items-center">
          {/* Company Info */}
          <div>
            <div className="flex items-center space-x-3 mb-4">
              <div className="w-10 h-10 bg-gradient-to-br from-green-500 to-emerald-600 rounded-full flex items-center justify-center">
                <span className="text-white font-bold text-lg">F</span>
              </div>
              <div>
                <h3 className="text-xl font-bold" style={{ fontFamily: 'Bricolage Grotesque, sans-serif' }}>{t('footer.companyName')}</h3>
                <p className="text-green-400 text-sm" style={{ fontFamily: 'Montserrat, sans-serif' }}>{t('footer.companyType')}</p>
              </div>
            </div>
            <p className="text-gray-300 text-sm leading-relaxed" style={{ fontFamily: 'Montserrat, sans-serif' }}>
              {t('footer.description')}
            </p>
          </div>

          {/* Social Links */}
          <div className="flex justify-center md:justify-end">
            <div className="flex space-x-4">
              {/* Facebook */}
              <button className="w-10 h-10 bg-gray-800 rounded-full flex items-center justify-center hover:bg-green-600 transition-colors duration-200">
                <svg className="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
                </svg>
              </button>
              
              {/* Instagram */}
              <button className="w-10 h-10 bg-gray-800 rounded-full flex items-center justify-center hover:bg-green-600 transition-colors duration-200">
                <svg className="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12.017 0C5.396 0 .029 5.367.029 11.987c0 6.62 5.367 11.987 11.988 11.987 6.62 0 11.987-5.367 11.987-11.987C24.014 5.367 18.637.001 12.017.001zM8.449 16.988c-1.297 0-2.448-.49-3.323-1.297C4.198 14.895 3.708 13.744 3.708 12.447s.49-2.448 1.418-3.323c.875-.807 2.026-1.297 3.323-1.297s2.448.49 3.323 1.297c.928.875 1.418 2.026 1.418 3.323s-.49 2.448-1.418 3.244c-.875.807-2.026 1.297-3.323 1.297zm7.83-9.781c-.49 0-.928-.175-1.297-.49-.367-.315-.49-.753-.49-1.243 0-.49.123-.928.49-1.243.369-.367.807-.49 1.297-.49s.928.123 1.297.49c.367.315.49.753.49 1.243 0 .49-.123.928-.49 1.243-.369.315-.807.49-1.297.49z"/>
                </svg>
              </button>
              
              {/* Twitter */}
              <button className="w-10 h-10 bg-gray-800 rounded-full flex items-center justify-center hover:bg-green-600 transition-colors duration-200">
                <svg className="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                </svg>
              </button>
              
              {/* YouTube */}
              <button className="w-10 h-10 bg-gray-800 rounded-full flex items-center justify-center hover:bg-green-600 transition-colors duration-200">
                <svg className="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>
                </svg>
              </button>
            </div>
          </div>
        </div>

        {/* Bottom Bar */}
        <div className="border-t border-gray-800 mt-6 sm:mt-8 pt-4 sm:pt-6 flex flex-col md:flex-row justify-between items-center">
          <p className="text-gray-400 text-sm" style={{ fontFamily: 'Montserrat, sans-serif' }}>
            {t('footer.copyright')}
          </p>
          <div className="flex space-x-6 mt-4 md:mt-0">
            <a href="#" className="text-gray-400 hover:text-green-400 text-sm transition-colors duration-200" style={{ fontFamily: 'Montserrat, sans-serif' }}>
              {t('footer.privacyPolicy')}
            </a>
            <a href="#" className="text-gray-400 hover:text-green-400 text-sm transition-colors duration-200" style={{ fontFamily: 'Montserrat, sans-serif' }}>
              {t('footer.termsOfService')}
            </a>
          </div>
        </div>
      </div>
    </footer>
  )
}
</file>

<file path="src/components/Header.tsx">
import { useTranslation } from 'react-i18next';
import LanguageSwitcher from './LanguageSwitcher';

export default function Header() {
  const { t } = useTranslation();

  return (
    <header className="fixed top-0 w-full bg-slate-900 z-50 transition-all duration-300">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center py-3 sm:py-4">
          {/* Brand Name */}
          <div className="flex items-center">
            <h1
              className="text-xl sm:text-2xl lg:text-3xl font-bold text-white"
              style={{ fontFamily: "Bricolage Grotesque, sans-serif" }}
            >
              {t('header.brand')}
            </h1>
          </div>

          {/* Contact Us Button and Language Switcher */}
          <div className="flex items-center space-x-4">
            <button className="bg-green-500 text-white px-3 py-2 sm:px-6 sm:py-2 text-sm sm:text-base rounded-md hover:bg-green-700 transition-colors duration-200 font-medium">
              {t('header.contactUs')}
            </button>
            <LanguageSwitcher />
          </div>
        </div>
      </div>
    </header>
  );
}
</file>

<file path="src/components/ProductCatalog.tsx">
import { useTranslation } from 'react-i18next';

export default function ProductCatalog() {
  const { t } = useTranslation();
  
  const allProducts = [
    {
      name: t('products.items.vermigro.name'),
      category: t('products.categories.soilRootEnhancer'),
      description: t('products.items.vermigro.description'),
      benefits: t('products.items.vermigro.benefits', { returnObjects: true }) as string[],
      image: "/api/placeholder/300/200",
    },
    {
      name: t('products.items.jumbogrip.name'),
      category: t('products.categories.soilRootEnhancer'),
      description: t('products.items.jumbogrip.description'),
      benefits: t('products.items.jumbogrip.benefits', { returnObjects: true }) as string[],
      image: "/api/placeholder/300/200",
    },
    {
      name: t('products.items.rewardN.name'),
      category: t('products.categories.fungalControl'),
      description: t('products.items.rewardN.description'),
      benefits: t('products.items.rewardN.benefits', { returnObjects: true }) as string[],
      image: "/api/placeholder/300/200",
    },
    {
      name: t('products.items.orthogrip18.name'),
      category: t('products.categories.fungalControl'),
      description: t('products.items.orthogrip18.description'),
      benefits: t('products.items.orthogrip18.benefits', { returnObjects: true }) as string[],
      image: "/api/placeholder/300/200",
    },
    {
      name: t('products.items.technovit.name'),
      category: t('products.categories.stressWeatherProtection'),
      description: t('products.items.technovit.description'),
      benefits: t('products.items.technovit.benefits', { returnObjects: true }) as string[],
      image: "/api/placeholder/300/200",
    },
    {
      name: t('products.items.microgrip.name'),
      category: t('products.categories.micronutrientSupplement'),
      description: t('products.items.microgrip.description'),
      benefits: t('products.items.microgrip.benefits', { returnObjects: true }) as string[],
      image: "/api/placeholder/300/200",
    },
    {
      name: t('products.items.setterDF.name'),
      category: t('products.categories.fruitGrowthQualityEnhancer'),
      description: t('products.items.setterDF.description'),
      benefits: t('products.items.setterDF.benefits', { returnObjects: true }) as string[],
      image: "/api/placeholder/300/200",
    },
    {
      name: t('products.items.goldHut98.name'),
      category: t('products.categories.flowerFruitDevelopment'),
      description: t('products.items.goldHut98.description'),
      benefits: t('products.items.goldHut98.benefits', { returnObjects: true }) as string[],
      image: "/api/placeholder/300/200",
    },
    {
      name: t('products.items.flowerStart.name'),
      category: t('products.categories.flowerFruitDevelopment'),
      description: t('products.items.flowerStart.description'),
      benefits: t('products.items.flowerStart.benefits', { returnObjects: true }) as string[],
      image: "/api/placeholder/300/200",
    },
  ];

  return (
    <section
      id="products"
      className="pt-16 sm:pt-20 lg:pt-24 pb-12 sm:pb-16 lg:pb-20 bg-gradient-to-br from-gray-50 to-green-50"
    >
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Section Header */}
        <div className="text-center mb-8 sm:mb-12 lg:mb-16">
          <h2
            className="text-2xl sm:text-3xl lg:text-4xl xl:text-5xl font-bold text-gray-900 mb-4 sm:mb-6"
            style={{ fontFamily: "Bricolage Grotesque, sans-serif" }}
          >
            {t('products.title')}
          </h2>
          <p
            className="text-base sm:text-lg lg:text-xl text-gray-600 max-w-5xl mx-auto px-4"
            style={{ fontFamily: "Montserrat, sans-serif" }}
          >
            {t('products.subtitle')}
          </p>
        </div>

        {/* Products Grid */}
        <div className="grid grid-cols-2 lg:grid-cols-3 gap-3 sm:gap-4 lg:gap-6">
          {allProducts.map((product) => (
            <div
              key={product.name}
              className="bg-white rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300"
            >
              {/* Product Image Placeholder */}
              <div className="h-32 sm:h-40 lg:h-48 bg-gray-200 flex items-center justify-center">
                <div className="text-center">
                  <div className="w-16 h-16 bg-green-100 rounded-lg flex items-center justify-center mx-auto mb-2">
                    <span className="text-2xl text-green-600">📦</span>
                  </div>
                  <p className="text-gray-500 text-sm">{t('products.productImage')}</p>
                </div>
              </div>

              <div className="p-4 sm:p-6">
                {/* Category Badge */}
                <span className="inline-block bg-green-100 text-green-800 text-xs px-2 py-1 rounded-full mb-3">
                  {product.category}
                </span>

                <h4
                  className="text-sm sm:text-lg lg:text-xl font-bold text-green-800 mb-2 sm:mb-3"
                  style={{ fontFamily: "Bricolage Grotesque, sans-serif" }}
                >
                  {product.name}
                </h4>
                <p
                  className="text-gray-700 mb-3 sm:mb-4 text-xs sm:text-sm leading-relaxed"
                  style={{ fontFamily: "Montserrat, sans-serif" }}
                >
                  {product.description}
                </p>

                <div className="space-y-1 sm:space-y-2">
                  <h5 className="font-semibold text-green-700 text-xs sm:text-sm">
                    {t('products.keyBenefits')}
                  </h5>
                  <ul className="space-y-1">
                    {product.benefits.map((benefit, idx) => (
                      <li
                        key={idx}
                        className="flex items-center text-xs sm:text-sm text-gray-600"
                      >
                        <span className="w-1.5 h-1.5 bg-green-500 rounded-full mr-2 flex-shrink-0"></span>
                        {benefit}
                      </li>
                    ))}
                  </ul>
                </div>

                <div className="flex gap-1 sm:gap-2 mt-3 sm:mt-4">
                  <button className="flex-1 bg-green-600 text-white py-1.5 sm:py-2 px-2 sm:px-3 rounded-md hover:bg-green-700 transition-colors duration-200 text-xs sm:text-sm font-medium">
                    {t('products.learnMore')}
                  </button>
                  <button className="flex-1 border border-green-600 text-green-600 hover:bg-green-600 hover:text-white py-1.5 sm:py-2 px-2 sm:px-3 rounded-md transition-colors duration-200 text-xs sm:text-sm font-medium">
                    {t('products.getQuote')}
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
}
</file>

<file path="src/components/ProductCategories.tsx">
import { useState, useRef } from 'react'
import { useTranslation } from 'react-i18next';

export default function ProductCategories() {
  const { t } = useTranslation();
  const [showLeftArrow, setShowLeftArrow] = useState(false)
  const [showRightArrow, setShowRightArrow] = useState(true)
  const scrollContainerRef = useRef<HTMLDivElement>(null)

  const categories = [
    { name: t('categories.nutrients'), placeholder: "🌱" },
    { name: t('categories.fungicides'), placeholder: "🍄" },
    { name: t('categories.insecticides'), placeholder: "🐛" },
    { name: t('categories.seeds'), placeholder: "🌾" },
    { name: t('categories.weedicides'), placeholder: "🌿" },
    { name: t('categories.tissueCulture'), placeholder: "🧪" },
  ];

  const handleScroll = () => {
    if (scrollContainerRef.current) {
      const { scrollLeft, scrollWidth, clientWidth } = scrollContainerRef.current
      setShowLeftArrow(scrollLeft > 0)
      setShowRightArrow(scrollLeft < scrollWidth - clientWidth - 1)
    }
  }

  const scrollLeft = () => {
    if (scrollContainerRef.current) {
      scrollContainerRef.current.scrollBy({ left: -200, behavior: 'smooth' })
    }
  }

  const scrollRight = () => {
    if (scrollContainerRef.current) {
      scrollContainerRef.current.scrollBy({ left: 200, behavior: 'smooth' })
    }
  }

  return (
    <section className="bg-gray-50 py-4 mt-16 sm:mt-20">
      <div className="max-w-6xl mx-auto px-2 sm:px-4 lg:px-8">
        <div className="relative">
          <div 
            ref={scrollContainerRef}
            className="flex items-center justify-start sm:justify-center space-x-2 sm:space-x-4 lg:space-x-6 overflow-x-auto pb-2 scrollbar-hide"
            onScroll={handleScroll}
            style={{ scrollbarWidth: 'none', msOverflowStyle: 'none' }}
          >
            {/* Categories */}
            {categories.map((category, index) => (
              <div key={index} className="text-center flex-shrink-0">
                {/* Light green rounded square - responsive sizing */}
                <div
                  className="w-12 h-12 sm:w-16 sm:h-16 lg:w-20 lg:h-20 rounded-lg sm:rounded-xl flex items-center justify-center mb-1 sm:mb-2 mx-auto"
                  style={{ backgroundColor: "#c8e6c9" }}
                >
                  <span className="text-sm sm:text-base lg:text-lg">{category.placeholder}</span>
                </div>
                {/* Category name */}
                <p className="text-xs sm:text-xs lg:text-sm font-medium text-gray-800 whitespace-nowrap" style={{ fontFamily: 'Montserrat, sans-serif' }}>
                  {category.name}
                </p>
              </div>
            ))}
          </div>

          {/* Left Arrow - only show on mobile when needed */}
          {showLeftArrow && (
            <button
              onClick={scrollLeft}
              className="absolute left-0 top-2 bg-white rounded-full w-8 h-8 flex items-center justify-center shadow-lg hover:shadow-xl transition-shadow duration-200 z-10 sm:hidden"
            >
              <svg className="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
              </svg>
            </button>
          )}

          {/* Right Arrow - only show on mobile when needed */}
          {showRightArrow && (
            <button
              onClick={scrollRight}
              className="absolute right-0 top-2 bg-white rounded-full w-8 h-8 flex items-center justify-center shadow-lg hover:shadow-xl transition-shadow duration-200 z-10 sm:hidden"
            >
              <svg className="w-4 h-4 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
              </svg>
            </button>
          )}
        </div>
      </div>
    </section>
  );
}
</file>

<file path="src/locales/en/translation.json">
{
  "header": {
    "brand": "Fieldgrip",
    "contactUs": "Contact"
  },
  "categories": {
    "nutrients": "Nutrients",
    "fungicides": "Fungicides",
    "insecticides": "Insecticides",
    "seeds": "Seeds",
    "weedicides": "Weedicides",
    "tissueCulture": "Tissue Culture"
  },
  "products": {
    "title": "Our Products",
    "subtitle": "Complete range of specialized agricultural products designed to maximize your crop potential",
    "keyBenefits": "Key Benefits:",
    "learnMore": "Learn More",
    "getQuote": "Get Quote",
    "productImage": "Product Image",
    "categories": {
      "soilRootEnhancer": "Soil & Root Enhancer",
      "fungalControl": "Fungal Control",
      "stressWeatherProtection": "Stress/Weather Protection",
      "micronutrientSupplement": "Micronutrient Supplement",
      "fruitGrowthQualityEnhancer": "Fruit Growth & Quality Enhancer",
      "flowerFruitDevelopment": "Flower/Fruit Development"
    },
    "items": {
      "vermigro": {
        "name": "Vermigro",
        "description": "Increases the number of useful microbes in soil, improves yield, and enhances plant health",
        "benefits": ["Enhanced soil microbes", "Improved yield", "Better plant health"]
      },
      "jumbogrip": {
        "name": "Jumbogrip",
        "description": "Significantly increases fruit size and weight, enhances quality for various crops",
        "benefits": ["Larger fruits", "Better quality", "Higher weight"]
      },
      "rewardN": {
        "name": "Reward-N",
        "description": "Controls rot and diseases in ginger and turmeric; recommended for drip or drenching",
        "benefits": ["Disease control", "Rot prevention", "Crop protection"]
      },
      "orthogrip18": {
        "name": "Orthogrip 18",
        "description": "Reduces abiotic stress from temperature, excess rain, or disease",
        "benefits": ["Stress reduction", "Weather protection", "Disease resistance"]
      },
      "technovit": {
        "name": "Technovit",
        "description": "Helps plants withstand environmental changes and relieves stress. Increases branches and improves plant health",
        "benefits": ["Stress relief", "More branches", "Environmental resistance"]
      },
      "microgrip": {
        "name": "Microgrip",
        "description": "Contains all essential minor nutrients as per government standard; increases yield by 30–40%",
        "benefits": ["Essential nutrients", "30-40% yield increase", "Government standard"]
      },
      "setterDF": {
        "name": "Setter DF",
        "description": "Specialized formulation for enhanced fruit setting and development",
        "benefits": ["Better fruit setting", "Enhanced development", "Quality improvement"]
      },
      "goldHut98": {
        "name": "Gold Hut-98",
        "description": "Increases the number of white roots, improves plant quality and production",
        "benefits": ["More white roots", "Better quality", "Higher production"]
      },
      "flowerStart": {
        "name": "Flower Start",
        "description": "Flower induction booster for enhanced flowering and fruit set",
        "benefits": ["Flower induction", "Enhanced flowering", "Better fruit set"]
      }
    }
  },
  "about": {
    "title": "About Fieldgrip Private Limited",
    "subtitle": "Empowering farmers with innovative agricultural solutions since our inception",
    "ourStory": "Our Story",
    "storyContent": {
      "paragraph1": "Fieldgrip Private Limited was founded with a vision to revolutionize agriculture through innovative, sustainable solutions. We understand the challenges faced by modern farmers and are committed to providing products that not only increase yields but also protect the environment.",
      "paragraph2": "Our comprehensive range of 9 specialized products covers every aspect of crop nutrition, from soil conditioning to harvest optimization. Each product is carefully formulated using the latest agricultural science and tested extensively to ensure maximum effectiveness.",
      "paragraph3": "We believe in building partnerships with farmers, providing not just products but complete agricultural solutions that help them achieve sustainable success."
    },
    "mission": {
      "title": "Our Mission",
      "content": "To empower farmers with innovative, sustainable agricultural solutions that maximize crop productivity while preserving environmental health for future generations."
    },
    "vision": {
      "title": "Our Vision",
      "content": "To be the leading provider of agricultural solutions in India, recognized for our commitment to innovation, quality, and farmer success."
    }
  },
  "contact": {
    "title": "Contact Us",
    "subtitle": "Ready to boost your crop yields? Contact us for personalized agricultural solutions",
    "sendMessage": "Send Us a Message",
    "contactInfo": "Contact Information",
    "whatsapp": {
      "title": "Connect on WhatsApp",
      "subtitle": "Get instant answers to your agricultural questions",
      "button": "Chat on WhatsApp"
    },
    "form": {
      "fullName": "Full Name",
      "email": "Email Address",
      "phone": "Phone Number",
      "primaryCrop": "Primary Crop",
      "selectCrop": "Select your crop",
      "message": "Message",
      "messagePlaceholder": "Tell us about your requirements...",
      "sendButton": "Send Message",
      "required": "*",
      "placeholders": {
        "name": "Enter your name",
        "email": "Enter your email",
        "phone": "Enter your phone"
      },
      "successMessage": "Thank you for your inquiry! We will contact you soon."
    },
    "info": {
      "address": {
        "title": "Address",
        "line1": "Fieldgrip Private Limited",
        "line2": "Agricultural Solutions Center",
        "line3": "Maharashtra, India"
      },
      "phone": {
        "title": "Phone"
      },
      "email": {
        "title": "Email"
      },
      "hours": {
        "title": "Working Hours",
        "weekdays": "Mon - Sat: 9:00 AM - 6:00 PM",
        "sunday": "Sunday: Closed"
      }
    },
    "crops": ["Cotton", "Grapes", "Sugarcane", "Banana", "Citrus", "Pomegranate", "Papaya", "Watermelon", "Vegetables", "Ginger", "Turmeric", "Other"]
  },
  "footer": {
    "companyName": "Fieldgrip",
    "companyType": "Private Limited",
    "description": "Empowering farmers with innovative agricultural solutions for sustainable growth and maximum productivity.",
    "copyright": "© 2024 Fieldgrip Private Limited. All rights reserved.",
    "privacyPolicy": "Privacy Policy",
    "termsOfService": "Terms of Service"
  },
  "language": {
    "english": "English",
    "hindi": "हिंदी",
    "marathi": "मराठी"
  }
}
</file>

<file path="src/main.tsx">
import { StrictMode } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import './i18n'
import App from './App.tsx'

createRoot(document.getElementById('root')!).render(
  <StrictMode>
    <App />
  </StrictMode>,
)
</file>

<file path="package.json">
{
  "name": "fieldgrip",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "tsc -b && vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "i18next": "^25.3.2",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-i18next": "^15.6.1"
  },
  "devDependencies": {
    "@eslint/js": "^9.30.1",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@vitejs/plugin-react-swc": "^3.10.2",
    "autoprefixer": "^10.4.21",
    "eslint": "^9.30.1",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^16.3.0",
    "postcss": "^8.5.6",
    "tailwindcss": "^3.4.17",
    "typescript": "~5.8.3",
    "typescript-eslint": "^8.35.1",
    "vite": "^7.0.4"
  }
}
</file>

</files>
